#!/bin/bash
if [[ $EUID -ne 0 ]]; then echo 'This script must be run as root' ; exit 1 ; fi
nocolor='\033[0m'
green='\033[0;32m'
red='\033[0;33m'
blue='\033[0;34m'

#----------------------------------------------------------------------------------
# --
#----------------------------------------------------------------------------------

# Initial Setup
#-----------------------------------------------------------------------------------------
TIMESTAMP=$(date +"%y%m%d")
HOSTNAME=$(hostname -s)
BACKUP_DIR="/usr/backup/$TIMESTAMP-$HOSTNAME"
BACKUP_PATH="$BACKUP_DIR/webdata"

mkdir -p $BACKUP_DIR

[ -d $BACKUP_PATH ] && rm -fr $BACKUP_PATH
[ -d $$BACKUP_PATH ] || mkdir -p $BACKUP_PATH

# Backup web directory
#-----------------------------------------------------------------------------------------
cd /srv
for i in */; do
    [ -d "$i" ] && tar -cpzf "$(basename -- $i).tar.gz" $i &>/dev/null
done

mv /srv/*tar.gz $BACKUP_PATH/

# Change permissions
#-----------------------------------------------------------------------------------------
chown -R webmaster:webmaster ${BACKUP_DIR}


# ======================================================================================


# Do Backup
#-----------------------------------------------------------------------------------------
TIMESTAMP=$(date +"%y%m%d")
HOSTNAME=$(hostname -s)
BACKUP_DIR="/usr/backup"
FILENAME="$TIMESTAMP-$HOSTNAME.tar.gz"

mkdir -p $BACKUP_DIR

[ -f "$BACKUP_DIR/$FILENAME" ] && rm -fr "$BACKUP_DIR/$FILENAME"

echo -e "\n${OK}Backing up the database...${NC}"
bash /usr/local/bin/backup-mysql

echo -e "\n${OK}Backing up web directory...${NC}"
bash /usr/local/bin/backup-dir

echo -e "\n${OK}Backing up configuration...${NC}"
cp -r /etc/nginx/vhost.d $BACKUP_DIR/$TIMESTAMP-$HOSTNAME/

echo -e "\n${OK}Compressing backup files...${NC}"
cd $BACKUP_DIR && tar -cpzf $FILENAME $TIMESTAMP-$HOSTNAME &>/dev/null

rm -fr $BACKUP_DIR/$TIMESTAMP-$HOSTNAME
chown -R webmaster:webmaster ${BACKUP_DIR}
